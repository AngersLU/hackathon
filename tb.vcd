$date
	Sat Dec 17 21:15:12 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 1 ! over $end
$var parameter 32 " index $end
$var parameter 32 # index_width $end
$var parameter 32 $ width $end
$var reg 1 % clk $end
$var reg 1 & rst_n $end
$var reg 1 ' start $end
$scope module ht_u $end
$var wire 1 % clk $end
$var wire 1 ( rst $end
$var wire 1 ' start $end
$var wire 1 ! over $end
$var parameter 32 ) index $end
$var parameter 32 * index_width $end
$var parameter 32 + width $end
$scope module step1_u $end
$var wire 1 % clk $end
$var wire 1 ( rst $end
$var parameter 32 , index $end
$var parameter 32 - index_width $end
$var parameter 32 . width $end
$scope begin step_1_even[0] $end
$var parameter 2 / even $end
$scope module max_min_x1 $end
$var wire 4 0 a [3:0] $end
$var wire 4 1 b [3:0] $end
$var wire 4 2 min [3:0] $end
$var wire 4 3 max [3:0] $end
$var wire 1 4 big $end
$var parameter 32 5 width $end
$upscope $end
$upscope $end
$scope begin step_1_even[4] $end
$var parameter 4 6 even $end
$scope module max_min_x1 $end
$var wire 4 7 a [3:0] $end
$var wire 4 8 b [3:0] $end
$var wire 4 9 min [3:0] $end
$var wire 4 : max [3:0] $end
$var wire 1 ; big $end
$var parameter 32 < width $end
$upscope $end
$upscope $end
$scope begin step_1_odd[2] $end
$var parameter 3 = odd $end
$scope module max_min_x2 $end
$var wire 4 > a [3:0] $end
$var wire 4 ? b [3:0] $end
$var wire 4 @ min [3:0] $end
$var wire 4 A max [3:0] $end
$var wire 1 B big $end
$var parameter 32 C width $end
$upscope $end
$upscope $end
$scope begin step_1_odd[6] $end
$var parameter 4 D odd $end
$scope module max_min_x2 $end
$var wire 4 E a [3:0] $end
$var wire 4 F b [3:0] $end
$var wire 4 G min [3:0] $end
$var wire 4 H max [3:0] $end
$var wire 1 I big $end
$var parameter 32 J width $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop4 $end
$var integer 32 K i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop5 $end
$var integer 32 L j [31:0] $end
$upscope $end
$upscope $end
$scope module step2_u $end
$var wire 1 % clk $end
$var wire 1 ( rst $end
$var parameter 32 M index $end
$var parameter 32 N index_div2 $end
$var parameter 32 O index_div4 $end
$var parameter 32 P index_width $end
$var parameter 32 Q width $end
$scope begin step2_temp1_hi[5] $end
$var parameter 4 R hi $end
$scope module max_min_x $end
$var wire 4 S min [3:0] $end
$var wire 4 T max [3:0] $end
$var wire 1 U big $end
$var wire 4 V b [3:0] $end
$var wire 4 W a [3:0] $end
$var parameter 32 X width $end
$upscope $end
$upscope $end
$scope begin step2_temp1_hi[7] $end
$var parameter 4 Y hi $end
$scope module max_min_x $end
$var wire 4 Z min [3:0] $end
$var wire 4 [ max [3:0] $end
$var wire 1 \ big $end
$var wire 4 ] b [3:0] $end
$var wire 4 ^ a [3:0] $end
$var parameter 32 _ width $end
$upscope $end
$upscope $end
$scope begin step2_temp1_lo[0] $end
$var parameter 2 ` lo $end
$scope module max_min_x $end
$var wire 4 a min [3:0] $end
$var wire 4 b max [3:0] $end
$var wire 1 c big $end
$var wire 4 d b [3:0] $end
$var wire 4 e a [3:0] $end
$var parameter 32 f width $end
$upscope $end
$upscope $end
$scope begin step2_temp1_lo[2] $end
$var parameter 3 g lo $end
$scope module max_min_x $end
$var wire 4 h min [3:0] $end
$var wire 4 i max [3:0] $end
$var wire 1 j big $end
$var wire 4 k b [3:0] $end
$var wire 4 l a [3:0] $end
$var parameter 32 m width $end
$upscope $end
$upscope $end
$scope begin step2_temp2_hi[4] $end
$var parameter 4 n hi $end
$scope module max_min_x4 $end
$var wire 4 o a [3:0] $end
$var wire 4 p b [3:0] $end
$var wire 4 q min [3:0] $end
$var wire 4 r max [3:0] $end
$var wire 1 s big $end
$var parameter 32 t width $end
$upscope $end
$upscope $end
$scope begin step2_temp2_hi[5] $end
$var parameter 4 u hi $end
$scope module max_min_x4 $end
$var wire 4 v a [3:0] $end
$var wire 4 w b [3:0] $end
$var wire 4 x min [3:0] $end
$var wire 4 y max [3:0] $end
$var wire 1 z big $end
$var parameter 32 { width $end
$upscope $end
$upscope $end
$scope begin step2_temp2_lo[0] $end
$var parameter 2 | lo $end
$scope module max_min_x3 $end
$var wire 4 } a [3:0] $end
$var wire 4 ~ b [3:0] $end
$var wire 4 !" min [3:0] $end
$var wire 4 "" max [3:0] $end
$var wire 1 #" big $end
$var parameter 32 $" width $end
$upscope $end
$upscope $end
$scope begin step2_temp2_lo[1] $end
$var parameter 2 %" lo $end
$scope module max_min_x3 $end
$var wire 4 &" a [3:0] $end
$var wire 4 '" b [3:0] $end
$var wire 4 (" min [3:0] $end
$var wire 4 )" max [3:0] $end
$var wire 1 *" big $end
$var parameter 32 +" width $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop6 $end
$var integer 32 ," i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop7 $end
$var integer 32 -" j [31:0] $end
$upscope $end
$upscope $end
$scope module step3_u $end
$var wire 1 % clk $end
$var wire 1 ( rst $end
$var parameter 32 ." index $end
$var parameter 32 /" index_div2 $end
$var parameter 32 0" index_div4 $end
$var parameter 32 1" index_width $end
$var parameter 32 2" width $end
$scope begin step2_temp1_even[0] $end
$var parameter 2 3" even $end
$scope module max_min_x $end
$var wire 4 4" min [3:0] $end
$var wire 4 5" max [3:0] $end
$var wire 1 6" big $end
$var wire 4 7" b [3:0] $end
$var wire 4 8" a [3:0] $end
$var parameter 32 9" width $end
$upscope $end
$upscope $end
$scope begin step2_temp1_even[2] $end
$var parameter 3 :" even $end
$scope module max_min_x $end
$var wire 4 ;" min [3:0] $end
$var wire 4 <" max [3:0] $end
$var wire 1 =" big $end
$var wire 4 >" b [3:0] $end
$var wire 4 ?" a [3:0] $end
$var parameter 32 @" width $end
$upscope $end
$upscope $end
$scope begin step2_temp1_even[4] $end
$var parameter 4 A" even $end
$scope module max_min_x $end
$var wire 4 B" min [3:0] $end
$var wire 4 C" max [3:0] $end
$var wire 1 D" big $end
$var wire 4 E" b [3:0] $end
$var wire 4 F" a [3:0] $end
$var parameter 32 G" width $end
$upscope $end
$upscope $end
$scope begin step2_temp1_even[6] $end
$var parameter 4 H" even $end
$scope module max_min_x $end
$var wire 4 I" min [3:0] $end
$var wire 4 J" max [3:0] $end
$var wire 1 K" big $end
$var wire 4 L" b [3:0] $end
$var wire 4 M" a [3:0] $end
$var parameter 32 N" width $end
$upscope $end
$upscope $end
$scope begin step2_temp2_hi[4] $end
$var parameter 4 O" hi $end
$scope module max_min_x $end
$var wire 4 P" min [3:0] $end
$var wire 4 Q" max [3:0] $end
$var wire 1 R" big $end
$var wire 4 S" b [3:0] $end
$var wire 4 T" a [3:0] $end
$var parameter 32 U" width $end
$upscope $end
$upscope $end
$scope begin step2_temp2_hi[5] $end
$var parameter 4 V" hi $end
$scope module max_min_x $end
$var wire 4 W" min [3:0] $end
$var wire 4 X" max [3:0] $end
$var wire 1 Y" big $end
$var wire 4 Z" b [3:0] $end
$var wire 4 [" a [3:0] $end
$var parameter 32 \" width $end
$upscope $end
$upscope $end
$scope begin step2_temp2_lo[0] $end
$var parameter 2 ]" lo $end
$scope module max_min_x $end
$var wire 4 ^" min [3:0] $end
$var wire 4 _" max [3:0] $end
$var wire 1 `" big $end
$var wire 4 a" b [3:0] $end
$var wire 4 b" a [3:0] $end
$var parameter 32 c" width $end
$upscope $end
$upscope $end
$scope begin step2_temp2_lo[1] $end
$var parameter 2 d" lo $end
$scope module max_min_x $end
$var wire 4 e" min [3:0] $end
$var wire 4 f" max [3:0] $end
$var wire 1 g" big $end
$var wire 4 h" b [3:0] $end
$var wire 4 i" a [3:0] $end
$var parameter 32 j" width $end
$upscope $end
$upscope $end
$scope begin step3_temp3_lo[0] $end
$var parameter 2 k" lo $end
$scope module max_min_x $end
$var wire 4 l" a [3:0] $end
$var wire 4 m" b [3:0] $end
$var wire 4 n" min [3:0] $end
$var wire 4 o" max [3:0] $end
$var wire 1 p" big $end
$var parameter 32 q" width $end
$upscope $end
$upscope $end
$scope begin step3_temp3_lo[1] $end
$var parameter 2 r" lo $end
$scope module max_min_x $end
$var wire 4 s" a [3:0] $end
$var wire 4 t" b [3:0] $end
$var wire 4 u" min [3:0] $end
$var wire 4 v" max [3:0] $end
$var wire 1 w" big $end
$var parameter 32 x" width $end
$upscope $end
$upscope $end
$scope begin step3_temp3_lo[2] $end
$var parameter 3 y" lo $end
$scope module max_min_x $end
$var wire 4 z" a [3:0] $end
$var wire 4 {" b [3:0] $end
$var wire 4 |" min [3:0] $end
$var wire 4 }" max [3:0] $end
$var wire 1 ~" big $end
$var parameter 32 !# width $end
$upscope $end
$upscope $end
$scope begin step3_temp3_lo[3] $end
$var parameter 3 "# lo $end
$scope module max_min_x $end
$var wire 4 ## a [3:0] $end
$var wire 4 $# b [3:0] $end
$var wire 4 %# min [3:0] $end
$var wire 4 &# max [3:0] $end
$var wire 1 '# big $end
$var parameter 32 (# width $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop8 $end
$var integer 32 )# i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop9 $end
$var integer 32 *# j [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 +# i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 ,# j [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 -# i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 .# i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 (#
b11 "#
b100 !#
b10 y"
b100 x"
b1 r"
b100 q"
b0 k"
b100 j"
b1 d"
b100 c"
b0 ]"
b100 \"
b101 V"
b100 U"
b100 O"
b100 N"
b110 H"
b100 G"
b100 A"
b100 @"
b10 :"
b100 9"
b0 3"
b100 2"
b11 1"
b10 0"
b100 /"
b1000 ."
b100 +"
b1 %"
b100 $"
b0 |
b100 {
b101 u
b100 t
b100 n
b100 m
b10 g
b100 f
b0 `
b100 _
b111 Y
b100 X
b101 R
b100 Q
b11 P
b10 O
b100 N
b1000 M
b100 J
b110 D
b100 C
b10 =
b100 <
b100 6
b100 5
b0 /
b100 .
b11 -
b1000 ,
b100 +
b11 *
b1000 )
b100 $
b11 #
b1000 "
$end
#0
$dumpvars
b0 .#
b1000 -#
b0 ,#
b0 +#
b0 *#
b0 )#
x'#
bx &#
bx %#
bx $#
bx ##
x~"
bx }"
bx |"
bx {"
bx z"
xw"
bx v"
bx u"
bx t"
bx s"
xp"
bx o"
bx n"
bx m"
bx l"
bx i"
bx h"
xg"
bx f"
bx e"
bx b"
bx a"
x`"
bx _"
bx ^"
bx ["
bx Z"
xY"
bx X"
bx W"
bx T"
bx S"
xR"
bx Q"
bx P"
bx M"
bx L"
xK"
bx J"
bx I"
bx F"
bx E"
xD"
bx C"
bx B"
bx ?"
bx >"
x="
bx <"
bx ;"
bx 8"
bx 7"
x6"
bx 5"
bx 4"
b0 -"
b0 ,"
x*"
bx )"
bx ("
bx '"
bx &"
x#"
bx ""
bx !"
bx ~
bx }
xz
bx y
bx x
bx w
bx v
xs
bx r
bx q
bx p
bx o
bx l
bx k
xj
bx i
bx h
bx e
bx d
xc
bx b
bx a
bx ^
bx ]
x\
bx [
bx Z
bx W
bx V
xU
bx T
bx S
b0 L
b0 K
xI
bx H
bx G
bx F
bx E
xB
bx A
bx @
bx ?
bx >
x;
bx :
bx 9
bx 8
bx 7
x4
bx 3
bx 2
bx 1
bx 0
1(
1'
0&
0%
x!
$end
#2500
b0 4"
b0 5"
b0 ;"
b0 <"
b0 B"
b0 C"
b0 I"
b0 J"
16"
b0 7"
b0 e"
1="
b0 >"
b0 f"
1D"
b0 E"
b0 W"
1K"
b0 L"
b0 X"
b0 8"
b0 ^"
b0 ?"
b0 _"
b0 F"
b0 P"
b0 M"
b0 Q"
b0 Z
b0 [
b0 S
b0 T
b0 a
b0 b
b0 h
b0 i
b0 G
b0 H
b0 9
b0 :
b0 @
b0 A
b0 2
b0 3
1g"
b0 h"
b0 %#
1Y"
b0 Z"
b0 &#
1`"
b0 a"
b0 |"
1R"
b0 S"
b0 }"
b0 i"
b0 u"
b0 ["
b0 v"
b0 b"
b0 n"
b0 T"
b0 o"
1\
b0 ^
b0 x
1U
b0 W
b0 y
b0 ]
b0 q
b0 V
b0 r
1c
b0 d
b0 ("
1j
b0 k
b0 )"
b0 e
b0 !"
b0 l
b0 ""
1I
b0 F
b0 E
1;
b0 8
b0 7
1B
b0 ?
b0 >
14
b0 1
b0 0
0!
1'#
b0 $#
1~"
b0 {"
1w"
b0 t"
1p"
b0 m"
b0 ##
b0 z"
b0 s"
b0 l"
1z
b0 w
1s
b0 p
b0 v
b0 o
1*"
b0 '"
1#"
b0 ~
b0 &"
b0 }
b1000 +#
b1000 )#
b1000 ,"
b1000 K
1%
#5000
0%
0(
1&
#7500
b1 G
b101 H
b10 9
b110 :
b100 @
b1000 A
b11 2
b111 3
0I
b101 F
b1 E
b10 8
b110 7
0B
b1000 ?
b100 >
04
b111 1
b11 0
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#10000
0%
#12500
b1 Z
b10 [
b101 S
b110 T
b11 a
b100 b
b111 h
b1000 i
b1 ^
b1 x
b110 W
b110 y
0\
b10 ]
b10 q
1U
b101 V
b101 r
0c
b100 d
b100 ("
b111 k
b111 )"
b11 e
b11 !"
b1000 l
b1000 ""
b1 w
0s
b101 p
b110 v
b10 o
b100 '"
0#"
b1000 ~
b111 &"
b11 }
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#15000
0%
#17500
b1 4"
b10 5"
b11 ;"
b100 <"
b101 B"
b110 C"
b111 I"
b1000 J"
b1 7"
b1 e"
0="
b100 >"
b100 f"
b101 E"
b101 W"
0K"
b1000 L"
b1000 X"
b10 8"
b10 ^"
b11 ?"
b11 _"
b110 F"
b110 P"
b111 M"
b111 Q"
b1 h"
b1 %#
0Y"
b1000 Z"
b1000 &#
b10 a"
b10 |"
0R"
b111 S"
b111 }"
b100 i"
b100 u"
b101 ["
b101 v"
b11 b"
b11 n"
b110 T"
b110 o"
b1 $#
b10 {"
0w"
b101 t"
0p"
b110 m"
b1000 ##
b111 z"
b100 s"
b11 l"
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#20000
0%
#22500
1!
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#25000
0%
#27500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#30000
0%
#32500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#35000
0%
#37500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#40000
0%
#42500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#45000
0%
#47500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#50000
0%
#52500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#55000
0%
#57500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#60000
0%
#62500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#65000
0%
#67500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#70000
0%
#72500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#75000
0%
#77500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#80000
0%
#82500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#85000
0%
#87500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#90000
0%
#92500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#95000
0%
#97500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#100000
0%
#102500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#105000
0%
#107500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#110000
0%
#112500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#115000
0%
#117500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#120000
0%
#122500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#125000
0%
#127500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#130000
0%
#132500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#135000
0%
#137500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#140000
0%
#142500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#145000
0%
#147500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#150000
0%
#152500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#155000
0%
#157500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#160000
0%
#162500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#165000
0%
#167500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#170000
0%
#172500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#175000
0%
#177500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#180000
0%
#182500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#185000
0%
#187500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#190000
0%
#192500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#195000
0%
#197500
b1000 ,#
b1000 *#
b1000 -"
b1000 L
1%
#200000
0%
b1000 .#
